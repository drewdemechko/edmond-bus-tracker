<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <h:head>
        <title>Edmond Bus Tracker</title>
        <!--<f:metadata>
            <f:viewAction action="#{loginBean.doFilter}" />
        </f:metadata>-->
    </h:head>
    <h:body>
        <ui:composition template="/template/layout.xhtml">
            <ui:define name="content">
                <div class="col-md-9">
                    <br />
                    <p:gmap widgetVar="map" id="gmap" center="35.6526783,-97.4781833" zoom="13" type="ROADMAP"  model="#{createRouteView.draggableModel}" style="width:100%;height:400px">
                        <p:ajax event="markerDrag" listener="#{createRouteView.onMarkerDrag}"/>
                    </p:gmap>
                    <br />
                    <button class="btn btn-default" onclick="simulate()">Simulate Buses</button>
                    <br />
                    <button class="btn btn-default" onclick="initialize()">Start Tracking</button>
                    <br />
                    <h3>Route</h3>
                    <h:selectOneMenu onchange="changeRoute(this.value)">
                        <f:selectItems value="#{routeManagement.getRoutes()}" var="r"
                            itemValue="#{r.name}" itemLabel="#{r.name}"></f:selectItems>
                    </h:selectOneMenu>
                </div>
                <script>
                    var routes; //List of BusRouteStops.
                    var selectedRoute = []; //BusRouteStops that match the route selected.
                    var markers = []; //Markers for each stop.
                    
                    var activeBuses = [];
                    var routesAndStops = [];
                    
                    //Get list of active buses
                    $.get("http://localhost:8080/edmond-bus-tracker/api/busservice/buses/active", function(data, status){
                        activeBuses = data;
                    });
                    
                    //Create list of routes with stops
                    $.get("http://localhost:8080/edmond-bus-tracker/api/routeservice/routes/active", function(data, status){
                        routes = data;
                    });
                    
                    function changeRoute(route){
                        selectedRoute = [];
                        var temp = [];
                        var tasks = [];
                        //Get selected route from list of BusRouteStops and get each stop.
                        for (var i = 0; i &lt; routes.length; i++){
                            if (routes[i].route == route){
                                selectedRoute.push(routes[i]);
                                tasks.push($.get("http://localhost:8080/edmond-bus-tracker/api/busstopservice/stops/" + routes[i].stop, function(data, status){
                                   temp.push(data);
                                }));
                            }
                        }
                        //Wait for stops to be received and sort them.
                        $.when.apply($, tasks).done(function(){
                            for (var i = 0; i &lt; selectedRoute.length; i++){
                                for (var j = 0; j &lt; temp.length; j++){
                                    if (temp[j].name == selectedRoute[i].stop)
                                        stops.splice(selectedRoute[i].stopOnRoute, 0, temp[j]);
                                }
                            }
                        });
                        //Remove any empty slots in stops array.
                        for (var i = 0; i &lt; stops.length; i++){
                            if (!stops[i]) stops.splice(i,1);
                            i--;
                        }
                    }
                    
                    function simulate(){
                        initialize();
                    }
                    
                    function initialize() {
                        //Reset the map.
                        var map = new google.maps.Map(document.getElementById("gmap"), {
                          center: {lat: 35.6526783, lng: -97.4781833},
                          zoom: 13,
                          mapTypeId: google.maps.MapTypeId.ROADMAP
                        });
                        
                        for (var i = 0; i &lt; routes.length; i++){
                            //Reset markers. 
                            for (var j = 0; j &lt; markers.length; j++){
                                markers[j].setMap(null);
                                markers[j] = null;
                                markers = [];
                            }
                            
                            //Set new markers.
                            for (var j = 0; j &lt; routes[i].busStops.length; j++){
                                markers.push(new google.maps.Marker({map:map, 
                                    position:new google.maps.LatLng(routes[i].busStops[j].latitude, routes[i].busStops[j].longitude), 
                                    id: routes[i].busStops[j].id, ordinal: markers.length}));
                            }
                           
                            //Start simulation if there is more than one stop.
                            if (routes[i].busStops.length &gt; 1){ 
                                trackRoute(map, routes[i].busStops, 0, routes[i].busId);
                            }
                        }
                    }

                    function trackRoute(map,stops,n,busId) { //Get directions and draw the path incrementally.
                        $.get("http://localhost:8080/edmond-bus-tracker/api/busservice/buses/edit/laststop/" + busId + "/" + stops[n].name, function(data, status){
                        });
                        var directionsService = new google.maps.DirectionsService();

                        var request = {
                            origin: { lat: stops[n].latitude, lng: stops[n].longitude },
                            destination: { lat: stops[n+1].latitude, lng: stops[n+1].longitude },
                            travelMode: google.maps.TravelMode.DRIVING
                        };
                        
                        directionsService.route(request, function(result, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                var route = new google.maps.Polyline({
                                    path: [],
                                    geodesic : true,
                                    strokeColor: '#00FF00',
                                    strokeOpacity: 1.0,
                                    strokeWeight: 2,
                                    editable: false,
                                    map:map
                                });

                                var pathCoords = result.routes[0].overview_path;

                                originMarker = new google.maps.Marker({map:map, position: pathCoords[0]});
                                destinationMarker = new google.maps.Marker({map:map, position: pathCoords[pathCoords.length-1]});

                                for (var i = 0; i &lt; pathCoords.length; i++) {                
                                    setTimeout(function(coords) {
                                        route.getPath().push(coords);
                                        var index = -1;

                                        for (var j = 0; j &lt; pathCoords.length; j++){ 
                                            if (pathCoords[j].lat == coords.lat &amp;&amp; pathCoords[j].lng == coords.lng){
                                                index = j;
                                            }
                                        }

                                        if (index == pathCoords.length-1 &amp;&amp; n &lt; stops.length-2){
                                            trackRoute(map, stops, n+1, busId);
                                        }else if(index == pathCoords.length-1 &amp;&amp; n &lt; stops.length-1){
                                            //arrived at last stop
                                            $.get("http://localhost:8080/edmond-bus-tracker/api/busservice/buses/edit/laststop/" + busId + "/" + stops[n+1].name, function(data, status){
                                            });
                                        }
                                    }, 3000*i, pathCoords[i]);
                                    var tempString = pathCoords[i].toString().substring(1,pathCoords[i].toString().length-1);
                                    var tempLatLng = tempString.split(", ");

                                    $.get("http://localhost:8080/edmond-bus-tracker/api/busservice/buses/edit/location/wait/" + busId + "/" + tempLatLng[0] + "/" + tempLatLng[1] + "/" + i, function(data, status){
                                    });
                                }
                            }
                        });
                    }
                </script>
            </ui:define>
        </ui:composition>
    </h:body>
</html>
